{
  "collection": {
    "_": {
      "postman_id": "6d1919fb-9e92-4ef2-95b4-8c9cdaab3d25",
      "exporter_id": "18249665"
    },
    "item": [
      {
        "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
        "name": "CreateWithTestData (myusersWithNewColumn.csv file)",
        "request": {
          "url": {
            "path": [
              "public",
              "v2",
              "users",
              ""
            ],
            "host": [
              "{{baseURLGoRest}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "{{tokenIDGoRest}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "//name, gender and status fetching from .csv file\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5cbbc3f3-ea74-4277-b980-c1d9087682ed",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 201\", function () {\r",
                "    pm.response.to.have.status(201);\r",
                "});\r",
                "\r",
                "pm.test(\"Check user response data test\", function () {\r",
                "    //Save response as json object of postman\r",
                "    var jsonData = pm.response.json();\r",
                "    //Validate these three files response vs data fields\r",
                "    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));\r",
                "    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
                "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
                "    \r",
                "    \r",
                "    //Validate random email\r",
                "\r",
                "    //Get the raw JSON body from request body\r",
                "    const rawJsonBody = pm.request.body.raw;\r",
                "    //Convert JSON to JavaScript object\r",
                "    const JSrequestuestBody = JSON.parse(rawJsonBody);\r",
                "    //Get the JavaScript field \"email\"\r",
                "    const randomEmail = JSrequestuestBody.email;\r",
                "    //Print it out\r",
                "    console.log(\"Expected emai l===> \"+ randomEmail);\r",
                "    //Assertion email in body request vs email in respose \r",
                "    pm.expect(jsonData.email).to.eql(randomEmail);\r",
                "\r",
                "});\r",
                "\r",
                "const response = pm.response.json();\r",
                "const user_id = response.id;\r",
                "console.log(\"user id ===> \"+ user_id);\r",
                "//Local variable userID\r",
                "pm.variables.set(\"userID\",user_id);"
              ],
              "_lastExecutionId": "46a58ac1-e312-4b6d-85c1-638d6a7be328"
            }
          }
        ]
      },
      {
        "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
        "name": "UpdateUserByID (WithExtraColumnConcept)",
        "request": {
          "url": {
            "path": [
              "public",
              "v2",
              "users",
              "{{userID}}"
            ],
            "host": [
              "{{baseURLGoRest}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "{{tokenIDGoRest}}"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "90c5091e-280e-4c77-ab3f-b253eb9bbc13",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "\r",
                "pm.test(\"Is user status updated\", function () {\r",
                "    var jsonData = pm.response.json();\r",
                "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
                "});"
              ],
              "_lastExecutionId": "e24e0205-00e0-4923-85f3-483ffb3edc22"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "6d1919fb-9e92-4ef2-95b4-8c9cdaab3d25",
      "name": "Day_08.5_DataDrivenAPIs_CSV UpdateWithExtraColumn",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "**NOTE:** GoRestEnv\n\nRun Collection Manually concept\n\nRun Collection via CLI\n\n**NOTE:** options after passing collection: --verbose (logs), -r cli, -r html report, -r json, -r junit and simultaneous reports like -r cli,html,json separated by come **without** space as folow:\n\nNOTE: Option -d path of .csv or .json file",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2025-04-06T20:50:26.920Z",
      "postman_exported_using": "Postman/11.38.3"
    },
    "id": "72401315-6f3f-4ae2-9f72-98cc5529384c",
    "name": "GoRestEnv",
    "values": [
      {
        "type": "any",
        "value": "https://gorest.co.in",
        "key": "baseURLGoRest"
      },
      {
        "type": "any",
        "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e",
        "key": "tokenIDGoRest"
      }
    ]
  },
  "globals": {
    "id": "f6adceaf-3f7f-4ca6-964b-e4a71effbf5c",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 36,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 412.8888888888889,
      "responseMin": 333,
      "responseMax": 1058,
      "responseSd": 160.49779814650586,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1743998616629,
      "completed": 1743998624447
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 9,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bd26214b-0fcc-4cd7-b8c8-d86892d3bf26",
          "httpRequestId": "e9a320b4-54d6-442c-897b-ba6217f11e9a"
        },
        "item": {
          "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
          "name": "CreateWithTestData (myusersWithNewColumn.csv file)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                ""
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "//name, gender and status fetching from .csv file\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5cbbc3f3-ea74-4277-b980-c1d9087682ed",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Check user response data test\", function () {\r",
                  "    //Save response as json object of postman\r",
                  "    var jsonData = pm.response.json();\r",
                  "    //Validate these three files response vs data fields\r",
                  "    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));\r",
                  "    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
                  "    \r",
                  "    \r",
                  "    //Validate random email\r",
                  "\r",
                  "    //Get the raw JSON body from request body\r",
                  "    const rawJsonBody = pm.request.body.raw;\r",
                  "    //Convert JSON to JavaScript object\r",
                  "    const JSrequestuestBody = JSON.parse(rawJsonBody);\r",
                  "    //Get the JavaScript field \"email\"\r",
                  "    const randomEmail = JSrequestuestBody.email;\r",
                  "    //Print it out\r",
                  "    console.log(\"Expected emai l===> \"+ randomEmail);\r",
                  "    //Assertion email in body request vs email in respose \r",
                  "    pm.expect(jsonData.email).to.eql(randomEmail);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "const user_id = response.id;\r",
                  "console.log(\"user id ===> \"+ user_id);\r",
                  "//Local variable userID\r",
                  "pm.variables.set(\"userID\",user_id);"
                ],
                "_lastExecutionId": "46a58ac1-e312-4b6d-85c1-638d6a7be328"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              ""
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "026c6403-3652-4e11-ac0e-0b41f34d0486",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "116",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "\n{\r\n    \"name\": \"Robin\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"Humberto49@hotmail.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "4eca46f0-90a5-4998-ab7f-6ef22bb9b41a",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:37 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "98"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"44dc81cfc2aee715334bb1fe7cf538fb\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "location",
              "value": "https://gorest.co.in/public/v2/users/7817188"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "84"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "1"
            },
            {
              "key": "x-request-id",
              "value": "48577f2b-dfd8-4285-993a-66c146bf9a5e"
            },
            {
              "key": "x-runtime",
              "value": "0.095249"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=Y1iHau%2FtqN3lGFo80exZPvkeuYwRYJIqXLS%2Bm7dQ785tcmg7zKHP1H62vegCw7qjMaBV9spDr%2Bo4Ypc1wZOaZNAGAzqBfOkucI%2BXKH7X5WyNv0PZtZ0qdy3BcvU31Gg%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a2dc0a57df2e-MIA"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=24973&min_rtt=24078&rtt_var=10820&sent=5&recv=5&lost=0&retrans=0&sent_bytes=2827&recv_bytes=970&delivery_rate=132518&cwnd=252&unsent_bytes=0&cid=0d20c563c20f8fd8&ts=876&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              56,
              56,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              111,
              98,
              105,
              110,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              72,
              117,
              109,
              98,
              101,
              114,
              116,
              111,
              52,
              57,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1058,
          "responseSize": 98
        },
        "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "35718413-17f6-4f40-a64a-db24de7b2962",
          "length": 2,
          "cycles": 9,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "992ab93b-faae-4806-a898-0e9b2102d998"
        },
        "item": {
          "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
          "name": "UpdateUserByID (WithExtraColumnConcept)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{userID}}"
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90c5091e-280e-4c77-ab3f-b253eb9bbc13",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
                  "});"
                ],
                "_lastExecutionId": "e24e0205-00e0-4923-85f3-483ffb3edc22"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7817188"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "528816ec-e2f3-41e6-9969-6a5fcd30a09e",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "28",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"status\": \"active\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "eff42c3f-db12-4683-b7bf-f8eb5f6d47aa",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:38 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"ba37d78f7ab1f5cb14b8209239e55008\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "89"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "2"
            },
            {
              "key": "x-request-id",
              "value": "2ce94297-44cb-441d-8a74-e4baaa70e45d"
            },
            {
              "key": "x-runtime",
              "value": "0.073990"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=xw4hUDXpc3rR6J4X%2FKxefQxr8v0oTsSPL5f3NgpsVWnROW0mZUTF807U9JOUJ2aCKA4iO5ll2nzj9TaJjPAYeHJ8dEYFT%2FvrqQBNYx56Pik5mwjQIf653nBuVheI%2F5o%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a2e1edc9df2e-MIA"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=27189&min_rtt=24078&rtt_var=12547&sent=9&recv=7&lost=0&retrans=0&sent_bytes=4828&recv_bytes=1407&delivery_rate=132518&cwnd=255&unsent_bytes=0&cid=0d20c563c20f8fd8&ts=1304&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              56,
              56,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              111,
              98,
              105,
              110,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              72,
              117,
              109,
              98,
              101,
              114,
              116,
              111,
              52,
              57,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 356,
          "responseSize": 96
        },
        "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "a51b53c4-860d-48e3-b41f-4a3112de54b6",
          "length": 2,
          "cycles": 9,
          "position": 0,
          "iteration": 1,
          "cr": true,
          "httpRequestId": "f82f2151-cf97-42a2-ae0e-f61392c72542"
        },
        "item": {
          "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
          "name": "CreateWithTestData (myusersWithNewColumn.csv file)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                ""
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "//name, gender and status fetching from .csv file\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5cbbc3f3-ea74-4277-b980-c1d9087682ed",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Check user response data test\", function () {\r",
                  "    //Save response as json object of postman\r",
                  "    var jsonData = pm.response.json();\r",
                  "    //Validate these three files response vs data fields\r",
                  "    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));\r",
                  "    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
                  "    \r",
                  "    \r",
                  "    //Validate random email\r",
                  "\r",
                  "    //Get the raw JSON body from request body\r",
                  "    const rawJsonBody = pm.request.body.raw;\r",
                  "    //Convert JSON to JavaScript object\r",
                  "    const JSrequestuestBody = JSON.parse(rawJsonBody);\r",
                  "    //Get the JavaScript field \"email\"\r",
                  "    const randomEmail = JSrequestuestBody.email;\r",
                  "    //Print it out\r",
                  "    console.log(\"Expected emai l===> \"+ randomEmail);\r",
                  "    //Assertion email in body request vs email in respose \r",
                  "    pm.expect(jsonData.email).to.eql(randomEmail);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "const user_id = response.id;\r",
                  "console.log(\"user id ===> \"+ user_id);\r",
                  "//Local variable userID\r",
                  "pm.variables.set(\"userID\",user_id);"
                ],
                "_lastExecutionId": "46a58ac1-e312-4b6d-85c1-638d6a7be328"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              ""
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c1d943f2-2664-4912-8dd2-d58f660286fd",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "120",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "\n{\r\n    \"name\": \"Amanda\",\r\n    \"gender\": \"female\",\r\n    \"email\": \"Justen.Brakus@yahoo.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "552c4a1f-5c5d-4a07-93a3-d5eea0f73d08",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:38 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "102"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"862b1009919d7292ca44f80aabb24ea7\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "location",
              "value": "https://gorest.co.in/public/v2/users/7817189"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "88"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "2"
            },
            {
              "key": "x-request-id",
              "value": "98016abc-b77a-4ec1-960c-ab1471ee48fc"
            },
            {
              "key": "x-runtime",
              "value": "0.081649"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=7dJxG5RFSVw5Wpr2xwjBE5c2PxhdIIMflmpOn6ue%2FUQoaEgcS0BliO%2FooKJTACKPIeG2VBD3mKraf69%2FoTco6e5Au5HcxWiFB%2FH7uH4JuBV6IZGZLEslXYJ53G3C2Jo%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a2e43a70df2e-MIA"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=27445&min_rtt=24078&rtt_var=9922&sent=15&recv=9&lost=0&retrans=0&sent_bytes=6396&recv_bytes=1931&delivery_rate=236026&cwnd=255&unsent_bytes=0&cid=0d20c563c20f8fd8&ts=1684&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              56,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              109,
              97,
              110,
              100,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              74,
              117,
              115,
              116,
              101,
              110,
              46,
              66,
              114,
              97,
              107,
              117,
              115,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 388,
          "responseSize": 102
        },
        "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "88fa4188-bf4a-44ef-a2dc-aa26db9fc44c",
          "length": 2,
          "cycles": 9,
          "position": 1,
          "iteration": 1,
          "httpRequestId": "56758124-0878-4ea4-86d1-3ca6179db9f0"
        },
        "item": {
          "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
          "name": "UpdateUserByID (WithExtraColumnConcept)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{userID}}"
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90c5091e-280e-4c77-ab3f-b253eb9bbc13",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
                  "});"
                ],
                "_lastExecutionId": "e24e0205-00e0-4923-85f3-483ffb3edc22"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7817189"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8b0a0d18-d1b9-4edb-a788-9b12f2b5fb34",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "28",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"status\": \"active\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "61301b18-37f5-40f2-bb3e-eaba5c0203f0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:39 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"49ecf231eb9cd399785093d1943932cc\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "87"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "3"
            },
            {
              "key": "x-request-id",
              "value": "8bc0f3c8-073e-41e3-af99-8bbe4236debf"
            },
            {
              "key": "x-runtime",
              "value": "0.053600"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=hH%2Fza%2FhFFbKxspI15yAri6ViQI2Yp7ewSNGFbRanK6y6gorv03g%2BXxgLHslU0IxWZ%2BZ7r662EZdmAiWBVdlTG8E%2F9K3VGZrpV79fnPStrWDleO9dNAK4R4810qYrYtg%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a2e6e841df2e-MIA"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=30180&min_rtt=24078&rtt_var=12912&sent=19&recv=11&lost=0&retrans=0&sent_bytes=7954&recv_bytes=2368&delivery_rate=236026&cwnd=255&unsent_bytes=0&cid=0d20c563c20f8fd8&ts=2082&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              56,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              109,
              97,
              110,
              100,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              74,
              117,
              115,
              116,
              101,
              110,
              46,
              66,
              114,
              97,
              107,
              117,
              115,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 351,
          "responseSize": 100
        },
        "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0c18f8df-0d90-4e59-b872-e32c200bf4c3",
          "length": 2,
          "cycles": 9,
          "position": 0,
          "iteration": 2,
          "cr": true,
          "httpRequestId": "03a2b35f-4db0-428c-aa85-52bd7f6902d5"
        },
        "item": {
          "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
          "name": "CreateWithTestData (myusersWithNewColumn.csv file)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                ""
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "//name, gender and status fetching from .csv file\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5cbbc3f3-ea74-4277-b980-c1d9087682ed",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Check user response data test\", function () {\r",
                  "    //Save response as json object of postman\r",
                  "    var jsonData = pm.response.json();\r",
                  "    //Validate these three files response vs data fields\r",
                  "    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));\r",
                  "    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
                  "    \r",
                  "    \r",
                  "    //Validate random email\r",
                  "\r",
                  "    //Get the raw JSON body from request body\r",
                  "    const rawJsonBody = pm.request.body.raw;\r",
                  "    //Convert JSON to JavaScript object\r",
                  "    const JSrequestuestBody = JSON.parse(rawJsonBody);\r",
                  "    //Get the JavaScript field \"email\"\r",
                  "    const randomEmail = JSrequestuestBody.email;\r",
                  "    //Print it out\r",
                  "    console.log(\"Expected emai l===> \"+ randomEmail);\r",
                  "    //Assertion email in body request vs email in respose \r",
                  "    pm.expect(jsonData.email).to.eql(randomEmail);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "const user_id = response.id;\r",
                  "console.log(\"user id ===> \"+ user_id);\r",
                  "//Local variable userID\r",
                  "pm.variables.set(\"userID\",user_id);"
                ],
                "_lastExecutionId": "46a58ac1-e312-4b6d-85c1-638d6a7be328"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              ""
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1b46d947-15b2-42b6-863f-eff0f8946b9b",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "117",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "\n{\r\n    \"name\": \"Frank\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"Diana.Orn41@hotmail.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "4e0e87f5-0545-4ea8-968b-c02c919579c6",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:39 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "99"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"144a9ebd775fbe9001d44e477d85913e\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "location",
              "value": "https://gorest.co.in/public/v2/users/7817190"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "86"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "4"
            },
            {
              "key": "x-request-id",
              "value": "1758c03c-6371-4c80-9d1e-42afa217a1dc"
            },
            {
              "key": "x-runtime",
              "value": "0.057852"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=bcgrGzucKVe2Y%2B9qlhDpk7MraUjp155PeQbblJYxsp%2BjatDQ8KvEk0SRraNuOX5yn2%2F%2F3EPhM0qhx30FyadkI4aYzIpXvGR3HZXPWjPCW77iv4K5CELj%2BDvulrGs2TU%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a2e91cb5df2e-MIA"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=30319&min_rtt=24078&rtt_var=9961&sent=24&recv=13&lost=0&retrans=0&sent_bytes=9503&recv_bytes=2889&delivery_rate=236026&cwnd=255&unsent_bytes=0&cid=0d20c563c20f8fd8&ts=2437&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              57,
              48,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              70,
              114,
              97,
              110,
              107,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              68,
              105,
              97,
              110,
              97,
              46,
              79,
              114,
              110,
              52,
              49,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 333,
          "responseSize": 99
        },
        "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2b09346e-0cd4-4d0a-ad68-03868b6d7178",
          "length": 2,
          "cycles": 9,
          "position": 1,
          "iteration": 2,
          "httpRequestId": "6f457861-5e6f-4a3f-9630-35a13fdd1b60"
        },
        "item": {
          "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
          "name": "UpdateUserByID (WithExtraColumnConcept)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{userID}}"
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90c5091e-280e-4c77-ab3f-b253eb9bbc13",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
                  "});"
                ],
                "_lastExecutionId": "e24e0205-00e0-4923-85f3-483ffb3edc22"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7817190"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "14beba05-a07a-43c0-a1b0-04f7b1814046",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "28",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"status\": \"active\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "66417510-b869-4579-a83b-d8cefb37ed9b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:39 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "Etag",
              "value": "W/\"9bf79e79db5426b09f6400ba106e6bcb\""
            },
            {
              "key": "Feature-Policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-Ratelimit-Limit",
              "value": "90"
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": "85"
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": "4"
            },
            {
              "key": "X-Request-Id",
              "value": "e0e94419-030c-4b11-8601-b431abb7ce34"
            },
            {
              "key": "X-Runtime",
              "value": "0.115530"
            },
            {
              "key": "X-Xss-Protection",
              "value": "0"
            },
            {
              "key": "Cf-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a2eb6934df2e-MIA"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              57,
              48,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              70,
              114,
              97,
              110,
              107,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              68,
              105,
              97,
              110,
              97,
              46,
              79,
              114,
              110,
              52,
              49,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 420,
          "responseSize": 97
        },
        "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e994cdd0-2f80-46b5-894b-1bb483217c78",
          "length": 2,
          "cycles": 9,
          "position": 0,
          "iteration": 3,
          "cr": true,
          "httpRequestId": "f09e7a29-50c4-4651-acb8-8abf64ee8bec"
        },
        "item": {
          "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
          "name": "CreateWithTestData (myusersWithNewColumn.csv file)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                ""
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "//name, gender and status fetching from .csv file\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5cbbc3f3-ea74-4277-b980-c1d9087682ed",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Check user response data test\", function () {\r",
                  "    //Save response as json object of postman\r",
                  "    var jsonData = pm.response.json();\r",
                  "    //Validate these three files response vs data fields\r",
                  "    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));\r",
                  "    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
                  "    \r",
                  "    \r",
                  "    //Validate random email\r",
                  "\r",
                  "    //Get the raw JSON body from request body\r",
                  "    const rawJsonBody = pm.request.body.raw;\r",
                  "    //Convert JSON to JavaScript object\r",
                  "    const JSrequestuestBody = JSON.parse(rawJsonBody);\r",
                  "    //Get the JavaScript field \"email\"\r",
                  "    const randomEmail = JSrequestuestBody.email;\r",
                  "    //Print it out\r",
                  "    console.log(\"Expected emai l===> \"+ randomEmail);\r",
                  "    //Assertion email in body request vs email in respose \r",
                  "    pm.expect(jsonData.email).to.eql(randomEmail);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "const user_id = response.id;\r",
                  "console.log(\"user id ===> \"+ user_id);\r",
                  "//Local variable userID\r",
                  "pm.variables.set(\"userID\",user_id);"
                ],
                "_lastExecutionId": "46a58ac1-e312-4b6d-85c1-638d6a7be328"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              ""
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "83a9c6ec-5d50-4ab9-a1b2-744e000ce935",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "120",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "\n{\r\n    \"name\": \"Maria\",\r\n    \"gender\": \"female\",\r\n    \"email\": \"Moses.Grimes82@yahoo.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "a389baf8-cbc3-40d2-ba6e-816f54e51472",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:40 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "102"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "Etag",
              "value": "W/\"046098be6f35466308325badb7997fa4\""
            },
            {
              "key": "Feature-Policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "Location",
              "value": "https://gorest.co.in/public/v2/users/7817191"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-Ratelimit-Limit",
              "value": "90"
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": "84"
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": "5"
            },
            {
              "key": "X-Request-Id",
              "value": "f608dd09-b491-4489-b6f8-7248281ae644"
            },
            {
              "key": "X-Runtime",
              "value": "0.047573"
            },
            {
              "key": "X-Xss-Protection",
              "value": "0"
            },
            {
              "key": "Cf-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a2ee1ec5df2e-MIA"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              57,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              97,
              114,
              105,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              111,
              115,
              101,
              115,
              46,
              71,
              114,
              105,
              109,
              101,
              115,
              56,
              50,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 352,
          "responseSize": 102
        },
        "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "33e7839a-f9d7-4828-98dc-ca8fd00f5e12",
          "length": 2,
          "cycles": 9,
          "position": 1,
          "iteration": 3,
          "httpRequestId": "92a1d541-3549-4034-bd93-cb20f7a53b0a"
        },
        "item": {
          "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
          "name": "UpdateUserByID (WithExtraColumnConcept)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{userID}}"
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90c5091e-280e-4c77-ab3f-b253eb9bbc13",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
                  "});"
                ],
                "_lastExecutionId": "e24e0205-00e0-4923-85f3-483ffb3edc22"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7817191"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2eae412b-639b-44cf-9c72-aa8dd6506f11",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "28",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"status\": \"active\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "754759bd-2118-4fba-b3d3-ec7215d05dbd",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:40 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "Etag",
              "value": "W/\"42ba1e35566012886ade911d868783b0\""
            },
            {
              "key": "Feature-Policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-Ratelimit-Limit",
              "value": "90"
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": "83"
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": "6"
            },
            {
              "key": "X-Request-Id",
              "value": "6d160c6a-fd46-4e02-aea0-b732a07a9850"
            },
            {
              "key": "X-Runtime",
              "value": "0.070122"
            },
            {
              "key": "X-Xss-Protection",
              "value": "0"
            },
            {
              "key": "Cf-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a2f08cb2df2e-MIA"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              57,
              49,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              97,
              114,
              105,
              97,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              111,
              115,
              101,
              115,
              46,
              71,
              114,
              105,
              109,
              101,
              115,
              56,
              50,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 388,
          "responseSize": 100
        },
        "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e6901844-c35d-4134-bbd1-29b924665522",
          "length": 2,
          "cycles": 9,
          "position": 0,
          "iteration": 4,
          "cr": true,
          "httpRequestId": "fa5a703c-ee98-419a-9659-6f20c5d4ad3b"
        },
        "item": {
          "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
          "name": "CreateWithTestData (myusersWithNewColumn.csv file)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                ""
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "//name, gender and status fetching from .csv file\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5cbbc3f3-ea74-4277-b980-c1d9087682ed",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Check user response data test\", function () {\r",
                  "    //Save response as json object of postman\r",
                  "    var jsonData = pm.response.json();\r",
                  "    //Validate these three files response vs data fields\r",
                  "    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));\r",
                  "    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
                  "    \r",
                  "    \r",
                  "    //Validate random email\r",
                  "\r",
                  "    //Get the raw JSON body from request body\r",
                  "    const rawJsonBody = pm.request.body.raw;\r",
                  "    //Convert JSON to JavaScript object\r",
                  "    const JSrequestuestBody = JSON.parse(rawJsonBody);\r",
                  "    //Get the JavaScript field \"email\"\r",
                  "    const randomEmail = JSrequestuestBody.email;\r",
                  "    //Print it out\r",
                  "    console.log(\"Expected emai l===> \"+ randomEmail);\r",
                  "    //Assertion email in body request vs email in respose \r",
                  "    pm.expect(jsonData.email).to.eql(randomEmail);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "const user_id = response.id;\r",
                  "console.log(\"user id ===> \"+ user_id);\r",
                  "//Local variable userID\r",
                  "pm.variables.set(\"userID\",user_id);"
                ],
                "_lastExecutionId": "46a58ac1-e312-4b6d-85c1-638d6a7be328"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              ""
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "618821c8-6eb9-45f8-a2ef-ebfd9c719682",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "122",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "\n{\r\n    \"name\": \"Sarahi\",\r\n    \"gender\": \"female\",\r\n    \"email\": \"Demond.Murray48@yahoo.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "de91cd28-bea7-49fc-a1af-13cbd0eaccb9",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:40 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "104"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "Etag",
              "value": "W/\"fd436a27bc45e6b1c8db451a49374158\""
            },
            {
              "key": "Feature-Policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "Location",
              "value": "https://gorest.co.in/public/v2/users/7817192"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-Ratelimit-Limit",
              "value": "90"
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": "82"
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": "6"
            },
            {
              "key": "X-Request-Id",
              "value": "5da5c110-f372-421b-8dca-f0fe8180a9f1"
            },
            {
              "key": "X-Runtime",
              "value": "0.053742"
            },
            {
              "key": "X-Xss-Protection",
              "value": "0"
            },
            {
              "key": "Cf-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a2f3099adf2e-MIA"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              57,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              97,
              114,
              97,
              104,
              105,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              68,
              101,
              109,
              111,
              110,
              100,
              46,
              77,
              117,
              114,
              114,
              97,
              121,
              52,
              56,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 376,
          "responseSize": 104
        },
        "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "360ed9c0-e236-4de5-bd43-261d9e25a01e",
          "length": 2,
          "cycles": 9,
          "position": 1,
          "iteration": 4,
          "httpRequestId": "c522fa2c-724c-4666-86ff-08ec2e0dfab4"
        },
        "item": {
          "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
          "name": "UpdateUserByID (WithExtraColumnConcept)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{userID}}"
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90c5091e-280e-4c77-ab3f-b253eb9bbc13",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
                  "});"
                ],
                "_lastExecutionId": "e24e0205-00e0-4923-85f3-483ffb3edc22"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7817192"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e5c8fd3b-9347-4457-bdb3-9de9b049ff5a",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "28",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"status\": \"active\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "434c79db-6303-4ad4-a3e8-52298449c924",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:41 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "Etag",
              "value": "W/\"f76b7fd9578601a85049ada09f969a04\""
            },
            {
              "key": "Feature-Policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-Ratelimit-Limit",
              "value": "90"
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": "81"
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": "7"
            },
            {
              "key": "X-Request-Id",
              "value": "78ac54cd-6856-4b76-81dc-0721a4395dc6"
            },
            {
              "key": "X-Runtime",
              "value": "0.050988"
            },
            {
              "key": "X-Xss-Protection",
              "value": "0"
            },
            {
              "key": "Cf-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a2f58ec9df2e-MIA"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              57,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              97,
              114,
              97,
              104,
              105,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              68,
              101,
              109,
              111,
              110,
              100,
              46,
              77,
              117,
              114,
              114,
              97,
              121,
              52,
              56,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 396,
          "responseSize": 102
        },
        "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "96858a88-b587-49eb-afbc-93a5cda78ef6",
          "length": 2,
          "cycles": 9,
          "position": 0,
          "iteration": 5,
          "cr": true,
          "httpRequestId": "c3bd935d-5b76-479f-a792-7b353ca871cb"
        },
        "item": {
          "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
          "name": "CreateWithTestData (myusersWithNewColumn.csv file)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                ""
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "//name, gender and status fetching from .csv file\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5cbbc3f3-ea74-4277-b980-c1d9087682ed",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Check user response data test\", function () {\r",
                  "    //Save response as json object of postman\r",
                  "    var jsonData = pm.response.json();\r",
                  "    //Validate these three files response vs data fields\r",
                  "    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));\r",
                  "    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
                  "    \r",
                  "    \r",
                  "    //Validate random email\r",
                  "\r",
                  "    //Get the raw JSON body from request body\r",
                  "    const rawJsonBody = pm.request.body.raw;\r",
                  "    //Convert JSON to JavaScript object\r",
                  "    const JSrequestuestBody = JSON.parse(rawJsonBody);\r",
                  "    //Get the JavaScript field \"email\"\r",
                  "    const randomEmail = JSrequestuestBody.email;\r",
                  "    //Print it out\r",
                  "    console.log(\"Expected emai l===> \"+ randomEmail);\r",
                  "    //Assertion email in body request vs email in respose \r",
                  "    pm.expect(jsonData.email).to.eql(randomEmail);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "const user_id = response.id;\r",
                  "console.log(\"user id ===> \"+ user_id);\r",
                  "//Local variable userID\r",
                  "pm.variables.set(\"userID\",user_id);"
                ],
                "_lastExecutionId": "46a58ac1-e312-4b6d-85c1-638d6a7be328"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              ""
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "08bd7870-1c3c-4e73-ab2e-53d8bdddecf1",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "121",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "\n{\r\n    \"name\": \"Carlos\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"Pattie_McClure@hotmail.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "8ffc2350-5077-48ed-91d0-eef826522275",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:41 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "103"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "Etag",
              "value": "W/\"09ae1c81ea1a088443d9555a2ec2cc79\""
            },
            {
              "key": "Feature-Policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "Location",
              "value": "https://gorest.co.in/public/v2/users/7817193"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-Ratelimit-Limit",
              "value": "90"
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": "80"
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": "8"
            },
            {
              "key": "X-Request-Id",
              "value": "4a56197b-0bde-4535-b86b-de0dc6732d8e"
            },
            {
              "key": "X-Runtime",
              "value": "0.084916"
            },
            {
              "key": "X-Xss-Protection",
              "value": "0"
            },
            {
              "key": "Cf-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a2f81caedf2e-MIA"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              57,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              97,
              114,
              108,
              111,
              115,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              80,
              97,
              116,
              116,
              105,
              101,
              95,
              77,
              99,
              67,
              108,
              117,
              114,
              101,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 386,
          "responseSize": 103
        },
        "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f65670c5-19b6-4cb2-92f0-a7be519dee9b",
          "length": 2,
          "cycles": 9,
          "position": 1,
          "iteration": 5,
          "httpRequestId": "57af60c0-e6c7-4ca2-b0b0-722f07bec91a"
        },
        "item": {
          "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
          "name": "UpdateUserByID (WithExtraColumnConcept)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{userID}}"
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90c5091e-280e-4c77-ab3f-b253eb9bbc13",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
                  "});"
                ],
                "_lastExecutionId": "e24e0205-00e0-4923-85f3-483ffb3edc22"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7817193"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4b7b0c70-f111-4521-8b5d-99281cd441ff",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "28",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"status\": \"active\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "804179b7-0e28-490a-a2f9-cabc0c10ecf7",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:42 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "Etag",
              "value": "W/\"b7cac1aae9bf6969880e870cad5a7b8b\""
            },
            {
              "key": "Feature-Policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-Ratelimit-Limit",
              "value": "90"
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": "79"
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": "8"
            },
            {
              "key": "X-Request-Id",
              "value": "7368b954-5a62-4a64-8892-2f9e90d224ef"
            },
            {
              "key": "X-Runtime",
              "value": "0.078171"
            },
            {
              "key": "X-Xss-Protection",
              "value": "0"
            },
            {
              "key": "Cf-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a2fa99e6df2e-MIA"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              57,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              97,
              114,
              108,
              111,
              115,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              80,
              97,
              116,
              116,
              105,
              101,
              95,
              77,
              99,
              67,
              108,
              117,
              114,
              101,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 349,
          "responseSize": 101
        },
        "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b32f9779-9570-4537-a03e-153445edd0bf",
          "length": 2,
          "cycles": 9,
          "position": 0,
          "iteration": 6,
          "cr": true,
          "httpRequestId": "c7178634-9189-44ed-8999-d979cc494f81"
        },
        "item": {
          "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
          "name": "CreateWithTestData (myusersWithNewColumn.csv file)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                ""
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "//name, gender and status fetching from .csv file\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5cbbc3f3-ea74-4277-b980-c1d9087682ed",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Check user response data test\", function () {\r",
                  "    //Save response as json object of postman\r",
                  "    var jsonData = pm.response.json();\r",
                  "    //Validate these three files response vs data fields\r",
                  "    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));\r",
                  "    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
                  "    \r",
                  "    \r",
                  "    //Validate random email\r",
                  "\r",
                  "    //Get the raw JSON body from request body\r",
                  "    const rawJsonBody = pm.request.body.raw;\r",
                  "    //Convert JSON to JavaScript object\r",
                  "    const JSrequestuestBody = JSON.parse(rawJsonBody);\r",
                  "    //Get the JavaScript field \"email\"\r",
                  "    const randomEmail = JSrequestuestBody.email;\r",
                  "    //Print it out\r",
                  "    console.log(\"Expected emai l===> \"+ randomEmail);\r",
                  "    //Assertion email in body request vs email in respose \r",
                  "    pm.expect(jsonData.email).to.eql(randomEmail);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "const user_id = response.id;\r",
                  "console.log(\"user id ===> \"+ user_id);\r",
                  "//Local variable userID\r",
                  "pm.variables.set(\"userID\",user_id);"
                ],
                "_lastExecutionId": "46a58ac1-e312-4b6d-85c1-638d6a7be328"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              ""
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "db7c6279-d235-4ee9-8581-7142a2efac45",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "114",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "\n{\r\n    \"name\": \"Jose\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"Joelle.Feil@gmail.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "b84d72e5-5091-4a4a-9760-61c65f33f143",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:42 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "96"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"2da5630c2a06df99f19d5be90169df9e\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "location",
              "value": "https://gorest.co.in/public/v2/users/7817194"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "78"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "9"
            },
            {
              "key": "x-request-id",
              "value": "746a6811-34fd-4b88-af7f-a6fe264c687c"
            },
            {
              "key": "x-runtime",
              "value": "0.060535"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=gBJ5lsT7rYfDS5A0c0ta6WWkrPCbhGXOWN6gOV1JNqZahQ2oYViet8ask812TxJD96tSyQ0aAz7p2YqtAnwyGaCo3NnZdThWzbJT5P6e5w3ULlfmvOmbN5Gk6W%2F9beo%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a2fceec8df2e-MIA"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=46767&min_rtt=12068&rtt_var=29264&sent=47&recv=27&lost=0&retrans=0&sent_bytes=17996&recv_bytes=6730&delivery_rate=342431&cwnd=255&unsent_bytes=0&cid=0d20c563c20f8fd8&ts=5613&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              57,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              74,
              111,
              115,
              101,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              74,
              111,
              101,
              108,
              108,
              101,
              46,
              70,
              101,
              105,
              108,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 341,
          "responseSize": 96
        },
        "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d9ec3197-db63-42c7-851e-770e1bb67f0d",
          "length": 2,
          "cycles": 9,
          "position": 1,
          "iteration": 6,
          "httpRequestId": "62572a98-ecdf-4dd1-982a-d81c23a51326"
        },
        "item": {
          "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
          "name": "UpdateUserByID (WithExtraColumnConcept)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{userID}}"
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90c5091e-280e-4c77-ab3f-b253eb9bbc13",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
                  "});"
                ],
                "_lastExecutionId": "e24e0205-00e0-4923-85f3-483ffb3edc22"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7817194"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f811b8fa-199b-4a91-8a33-8d189f529ccf",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "28",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"status\": \"active\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "c0dd56ad-d55c-482c-9f73-5639e72ff9ed",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:42 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "Etag",
              "value": "W/\"f2e6bc1ea226ec8aa1ff4b6f010affd3\""
            },
            {
              "key": "Feature-Policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-Ratelimit-Limit",
              "value": "90"
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": "77"
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": "10"
            },
            {
              "key": "X-Request-Id",
              "value": "01fe63ea-93bf-4c73-856c-77eb0b764557"
            },
            {
              "key": "X-Runtime",
              "value": "0.054749"
            },
            {
              "key": "X-Xss-Protection",
              "value": "0"
            },
            {
              "key": "Cf-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a2ff2c28df2e-MIA"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              57,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              74,
              111,
              115,
              101,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              74,
              111,
              101,
              108,
              108,
              101,
              46,
              70,
              101,
              105,
              108,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 341,
          "responseSize": 94
        },
        "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "fc3ee938-1946-4048-8094-199d35e58291",
          "length": 2,
          "cycles": 9,
          "position": 0,
          "iteration": 7,
          "cr": true,
          "httpRequestId": "14143d6c-9526-4b38-9a95-45dffb537c66"
        },
        "item": {
          "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
          "name": "CreateWithTestData (myusersWithNewColumn.csv file)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                ""
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "//name, gender and status fetching from .csv file\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5cbbc3f3-ea74-4277-b980-c1d9087682ed",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Check user response data test\", function () {\r",
                  "    //Save response as json object of postman\r",
                  "    var jsonData = pm.response.json();\r",
                  "    //Validate these three files response vs data fields\r",
                  "    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));\r",
                  "    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
                  "    \r",
                  "    \r",
                  "    //Validate random email\r",
                  "\r",
                  "    //Get the raw JSON body from request body\r",
                  "    const rawJsonBody = pm.request.body.raw;\r",
                  "    //Convert JSON to JavaScript object\r",
                  "    const JSrequestuestBody = JSON.parse(rawJsonBody);\r",
                  "    //Get the JavaScript field \"email\"\r",
                  "    const randomEmail = JSrequestuestBody.email;\r",
                  "    //Print it out\r",
                  "    console.log(\"Expected emai l===> \"+ randomEmail);\r",
                  "    //Assertion email in body request vs email in respose \r",
                  "    pm.expect(jsonData.email).to.eql(randomEmail);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "const user_id = response.id;\r",
                  "console.log(\"user id ===> \"+ user_id);\r",
                  "//Local variable userID\r",
                  "pm.variables.set(\"userID\",user_id);"
                ],
                "_lastExecutionId": "46a58ac1-e312-4b6d-85c1-638d6a7be328"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              ""
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5ddd0ce2-55f6-460e-acbc-c2b7cbaefd02",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "120",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "\n{\r\n    \"name\": \"Pedro\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"Lawson_Davis17@hotmail.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "55bdf44b-5b68-4475-bd3b-b1600ef12db3",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "102"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "Etag",
              "value": "W/\"b0d6dea33bb414f77df65201a35a26d6\""
            },
            {
              "key": "Feature-Policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "Location",
              "value": "https://gorest.co.in/public/v2/users/7817195"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-Ratelimit-Limit",
              "value": "90"
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": "76"
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": "10"
            },
            {
              "key": "X-Request-Id",
              "value": "65b125f1-af47-4e56-81b6-956d08424198"
            },
            {
              "key": "X-Runtime",
              "value": "0.064962"
            },
            {
              "key": "X-Xss-Protection",
              "value": "0"
            },
            {
              "key": "Cf-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a301588fdf2e-MIA"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              57,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              80,
              101,
              100,
              114,
              111,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              76,
              97,
              119,
              115,
              111,
              110,
              95,
              68,
              97,
              118,
              105,
              115,
              49,
              55,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 340,
          "responseSize": 102
        },
        "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "63b14e8a-017f-4d2b-a1df-cb710804d01e",
          "length": 2,
          "cycles": 9,
          "position": 1,
          "iteration": 7,
          "httpRequestId": "50f490c1-2626-46f3-bdb8-77873e424f06"
        },
        "item": {
          "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
          "name": "UpdateUserByID (WithExtraColumnConcept)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{userID}}"
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90c5091e-280e-4c77-ab3f-b253eb9bbc13",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
                  "});"
                ],
                "_lastExecutionId": "e24e0205-00e0-4923-85f3-483ffb3edc22"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7817195"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9a58244d-9011-4a80-addf-98258032edfb",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "28",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"status\": \"active\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "10ce684c-7f19-4ea0-9bc6-4efa676fe3d4",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"a07f85566554da6ec73798302437d631\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "75"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "11"
            },
            {
              "key": "x-request-id",
              "value": "d04a2afb-f12b-4ff5-a154-7a66b2fdef2b"
            },
            {
              "key": "x-runtime",
              "value": "0.050760"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=JrjSxkJ7Qpll1zdAi5oGbd30fI8Ypeoy1EoOn9fx6qNPJM4qPtzQK5qQHrvIfYlJ2y1kSKtJk7%2FDO1Zbe331myOOewKSTX0xOlxNVD%2F0OIpLDB5FoSB5MczpXXq6zrQ%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a303ad47df2e-MIA"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=43370&min_rtt=12068&rtt_var=23193&sent=56&recv=32&lost=0&retrans=0&sent_bytes=21516&recv_bytes=8128&delivery_rate=342431&cwnd=255&unsent_bytes=0&cid=0d20c563c20f8fd8&ts=6677&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              57,
              53,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              80,
              101,
              100,
              114,
              111,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              76,
              97,
              119,
              115,
              111,
              110,
              95,
              68,
              97,
              118,
              105,
              115,
              49,
              55,
              64,
              104,
              111,
              116,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 486,
          "responseSize": 100
        },
        "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f1d6163a-6865-48ee-8dc7-f99fb28b78c0",
          "length": 2,
          "cycles": 9,
          "position": 0,
          "iteration": 8,
          "cr": true,
          "httpRequestId": "bb9fdcc3-a3d8-4c79-879f-c599c5700990"
        },
        "item": {
          "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
          "name": "CreateWithTestData (myusersWithNewColumn.csv file)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                ""
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "//name, gender and status fetching from .csv file\r\n{\r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5cbbc3f3-ea74-4277-b980-c1d9087682ed",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Check user response data test\", function () {\r",
                  "    //Save response as json object of postman\r",
                  "    var jsonData = pm.response.json();\r",
                  "    //Validate these three files response vs data fields\r",
                  "    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));\r",
                  "    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
                  "    \r",
                  "    \r",
                  "    //Validate random email\r",
                  "\r",
                  "    //Get the raw JSON body from request body\r",
                  "    const rawJsonBody = pm.request.body.raw;\r",
                  "    //Convert JSON to JavaScript object\r",
                  "    const JSrequestuestBody = JSON.parse(rawJsonBody);\r",
                  "    //Get the JavaScript field \"email\"\r",
                  "    const randomEmail = JSrequestuestBody.email;\r",
                  "    //Print it out\r",
                  "    console.log(\"Expected emai l===> \"+ randomEmail);\r",
                  "    //Assertion email in body request vs email in respose \r",
                  "    pm.expect(jsonData.email).to.eql(randomEmail);\r",
                  "\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "const user_id = response.id;\r",
                  "console.log(\"user id ===> \"+ user_id);\r",
                  "//Local variable userID\r",
                  "pm.variables.set(\"userID\",user_id);"
                ],
                "_lastExecutionId": "46a58ac1-e312-4b6d-85c1-638d6a7be328"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              ""
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "713b8f47-52c9-4bb8-a01f-8bdf1f80c38b",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "117",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "\n{\r\n    \"name\": \"Rose\",\r\n    \"gender\": \"female\",\r\n    \"email\": \"Fae_McKenzie@gmail.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ed05f54b-af07-4f7f-97f2-759d10c76510",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:44 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "99"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"94610f771bf6daa4e6cbd7f0f72176cb\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "location",
              "value": "https://gorest.co.in/public/v2/users/7817196"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "74"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "12"
            },
            {
              "key": "x-request-id",
              "value": "43b6365d-68b9-4b1a-b149-c772ee20b7b5"
            },
            {
              "key": "x-runtime",
              "value": "0.099640"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=L0dycmuMrR7J4bWYirZZDNfk8nYNy%2BuQeRZf5laxLMaedd87lrTvjSzrp%2Fpn%2FP9BuV5u3iHSZUa%2Fo6Jmy7x4cwR02oaez19EohiCE94pU4HZ1qAq%2BMm%2F4JAtxT2Eyws%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a306bc45df2e-MIA"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=43370&min_rtt=12068&rtt_var=23193&sent=62&recv=34&lost=0&retrans=1&sent_bytes=23091&recv_bytes=8649&delivery_rate=342431&cwnd=255&unsent_bytes=0&cid=0d20c563c20f8fd8&ts=7221&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              57,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              111,
              115,
              101,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              70,
              97,
              101,
              95,
              77,
              99,
              75,
              101,
              110,
              122,
              105,
              101,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 393,
          "responseSize": 99
        },
        "id": "229d5b6e-82e7-4a2e-afe3-16ade71a91c9",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data test",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e85a2868-1cf0-498c-89a7-5eda207d43d3",
          "length": 2,
          "cycles": 9,
          "position": 1,
          "iteration": 8,
          "httpRequestId": "faafd549-eac4-4027-9bbc-8a6a4a053ca5"
        },
        "item": {
          "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
          "name": "UpdateUserByID (WithExtraColumnConcept)",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{userID}}"
              ],
              "host": [
                "{{baseURLGoRest}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenIDGoRest}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90c5091e-280e-4c77-ab3f-b253eb9bbc13",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
                  "});"
                ],
                "_lastExecutionId": "e24e0205-00e0-4923-85f3-483ffb3edc22"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7817196"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer 081368555efd9e49c46a729ba889822011be6ed2977146ecfcdd4d33e33ccf0e"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b15eb9e8-4dc2-4fe8-9125-b4bb906fcbdf",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "28",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"status\": \"active\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "180e29cd-de1b-4994-99cf-30e0fe839670",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 07 Apr 2025 04:03:44 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"1978b4749ccdbbdee3e341deab280003\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "73"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "12"
            },
            {
              "key": "x-request-id",
              "value": "73b2c38b-d1c8-4a9b-9452-c54540ebabcc"
            },
            {
              "key": "x-runtime",
              "value": "0.082379"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=0v6kWsZ8h%2Fy%2Bb8S1J6fyAvZpV15IDrZJPDneGrLbaaa%2Fm2ebwZxYrveifkh8tCex1BTonmrNDcWHq9UHVMU9%2Be3sS4D0RiDrMnyvsSw7TVXfD2v0%2BjMVpiaLxDMGIsU%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92c6a3094939df2e-MIA"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=44547&min_rtt=12068&rtt_var=19749&sent=66&recv=36&lost=0&retrans=1&sent_bytes=24653&recv_bytes=9086&delivery_rate=342431&cwnd=255&unsent_bytes=0&cid=0d20c563c20f8fd8&ts=7623&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              55,
              49,
              57,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              111,
              115,
              101,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              70,
              97,
              101,
              95,
              77,
              99,
              75,
              101,
              110,
              122,
              105,
              101,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              102,
              101,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 378,
          "responseSize": 97
        },
        "id": "2ca80d6a-7ec0-4b97-b8bc-30c7728c8812",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1792
    },
    "failures": [],
    "error": null
  }
}